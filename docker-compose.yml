version: "3"
services:
  nginx:
    image: nginx:1.17.9
    restart: on-failure:3
    ports: #change if prod
      - 8000:80
      - 8443:443
    volumes:
      - ./app:/var/www:delegated
      - ./config/default.dev.conf:/etc/nginx/conf.d/default.conf:delegated
    depends_on:
      - php
    networks:
      - app-network

  es:
    image: elasticsearch:7.11.1
    environment:
      - discovery.type=single-node
    networks:
      - app-network
    ports: #remove if prod
      - 9200:9200
  php:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: on-failure:3
    volumes:
      - ./app:/var/www:delegated
    networks:
      - app-network

  mysql:
    image: mariadb:10.5
    restart: on-failure:3
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - app-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    networks:
      - app-network

  redis:
    image: redis:4.0-alpine
    # command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    expose:
      - 6379
    volumes:
      - redisdata:/data
    networks:
      - app-network
    restart: on-failure:3

volumes:
  redisdata:
    driver: local
  mysqldata:
    driver: local

networks:
  app-network:
    driver: bridge
